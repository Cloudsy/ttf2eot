#summary Simple ttf2eot Example
#labels Featured,Phase-Deploy

= Introduction =

Simple demonstration of ttf2eot usage.


= Details =

First create the output file

`$ ttf2eot < input.ttf > output.eot`

If that worked, you can specify the file in your CSS.

{{{
<style>
@font-face { 
    font-family: "testing";
    src: url("output.eot");
}
</style>
<div style="font-family: testing">
Hello, World!
</div>
}}}

As only IE accepts this format, other browsers (Safari 3.x, Firefox 3.1.x, Chrome 2.x) are likely to adopt `src: url("foo.ttf") format("truetype")`. You can use [http://www.quirksmode.org/css/condcom.html CSS conditional comments] to specify both conventions, provide the font in EOT and TTF format, then use conditional comments to make IE see the EOT version.

{{{
<style>
@font-face { 
    font-family: "testing";
    src: url("output.ttf") format("truetype");
}
</style>
<!--[if IE]>
<style>
@font-face { 
    font-family: "testing";
    src: url("output.eot");
}
</style>
<![endif]-->
<div style="font-family: testing">
Hello, Multiple Browser World!
</div>
}}}

This works in IE7 and Safari 3.x.

=== Note for Windows Users ===


If you're a windows user, *this is probably not what you're looking for*.

You will probably feel more comfortable using "WEFT", Microsoft's own utility for handling EOT. ttf2eot is primarily for UNIX users who have to make font-embedding work for IE, or for batch conversions.